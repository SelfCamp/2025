:root {
  --board-size: 50vw;
  --grid-gap: calc(var(--board-size) / 50);
  --tile-size: calc((var(--board-size) - (var(--grid-gap) * 3)) / 4);
  --tile-slide-length: calc(var(--tile-size) + var(--grid-gap));
}

#board, #board-base {
  position: absolute;
  top: calc((100vh - var(--board-size)) / 2);
  left: calc((100vw - var(--board-size)) / 2);
  width: var(--board-size);
  height: var(--board-size);
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  justify-content: stretch;
  justify-items: stretch;
  grid-gap: var(--grid-gap);
}

#slide-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

#game-history {
  width: 75vw;
}

.tile {
  color: #FFFFFF;
  font-family: monospace;
  font-size: calc(var(--board-size) * 0.08);
  display: flex;
  justify-content: center ;
  align-items: center;
  border: calc(var(--board-size) / 250) solid #444444;
  background-color: #81caaf;
  border-radius: calc(var(--board-size) / 50);
}

#board-base .tile {
  background-color: #888888;
}

.tile[value='2'] {
  background-color: #000000;
}

.tile[value='4'] {
  background-color: #111111;
}

.tile[value='8'] {
  background-color: #222222;
}

.tile[value='16'] {
  background-color: #333333;
}

.tile[value='32'] {
  background-color: #444444;
}

.tile[value='64'] {
  background-color: #555555;
}

.tile[value='128'] {
  background-color: #666666;
}

.tile[value='256'] {
  background-color: #777777;
}

.tile[value='512'] {
  background-color: #888888;
}

.tile[value='1024'] {
  background-color: #999999;
}

.tile[value='2048'] {
  background-color: #AAAAAA;
}

.tile[value='1'] {
  background-color: #BBBBBB;
}

.tile[value='2049'] {
  background-color: #CCCCCC;
}


/* ANIMATION */

.tile[data-state='sliding'] {
  animation-name: slide;
  animation-duration: var(--slide-duration);
}

.tile[data-state='merged'] {
  animation-name: merge;
  animation-duration: 250ms;
  animation-direction: alternate;
}

.tile[data-state='spawned'] {
  animation-name: spawn;
  animation-delay: 125ms;
  animation-duration: 250ms;
  animation-direction: alternate;
}

@keyframes slide {
  100% {
    transform:
      translateX(calc(var(--tile-slide-length) * var(--slide-x)))
      translateY(calc(var(--tile-slide-length) * var(--slide-y)));
  }
}

@keyframes merge {
  100% {
    background-color: red;
    transform: scale(1.1);
  }
}

@keyframes spawn {
  100% {
    background-color: white;
    transform: scale(1.1);
  }
}
