:root {
  --board-size: 40vw;
  --grid-gap: calc(var(--board-size) / 50);
  --tile-size: calc((var(--board-size) - (var(--grid-gap) * 3)) / 4);
  --tile-slide-length: calc(var(--tile-size) + var(--grid-gap));
}

/*layout*/

header {
  margin: auto;
}

footer p {
  padding: 0 20px;
  font-size: 1.5vw;
}

#title {
  text-align: center;
  font-size: 5vw;
  margin-bottom: 0;
}


body {
  background-color: #FF001E;
  margin: 0;
  color: #FFC9A4
}

nav {
}

nav ul {
  display: flex;
  list-style-type: none;
  flex-wrap: wrap;
  justify-content: space-evenly;
  margin: 0;
  padding: 2vw 2vw;
  font-size: 2.5vw;

}

nav ul li {
  border-radius: 10px;
  box-shadow: 0 5px 5px black;
  padding: 1vw;
  cursor: pointer;
}

#front {
  margin: auto;
  display: grid;
  grid-template-columns:  1fr;
  width: 50vw;
  background-color: #FF6700;
}


#game {
  position:relative;
  width: 50vw;
  height: 50vw;
  display: flex;
  justify-content: center;
  align-items: center;
}

#board, #board-base {
  position: absolute;
  width: var(--board-size);
  height: var(--board-size);
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  justify-content: stretch;
  justify-items: stretch;
  grid-gap: var(--grid-gap);
}

#slide-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

#game-history {
  position: absolute;
  bottom: 0;
  width: 20vw;
  height: 2vh;
}

.tile {
  color: #FFFFFF;
  font-family: monospace;
  font-size: calc(var(--board-size) * 0.08);
  display: flex;
  justify-content: center ;
  align-items: center;
  border: calc(var(--board-size) / 250) solid #444444;
  border-radius: calc(var(--board-size) / 50);
}

#board-base .tile {
  background-color: #ffca7f;
}

#board .tile[value='null'] {
  visibility: hidden;
}

.tile[value='2'] {
  background-color: #000000;
}

.tile[value='4'] {
  background-color: #111111;
}

.tile[value='8'] {
  background-color: #222222;
}

.tile[value='16'] {
  background-color: #333333;
}

.tile[value='32'] {
  background-color: #444444;
}

.tile[value='64'] {
  background-color: #555555;
}

.tile[value='128'] {
  background-color: #666666;
}

.tile[value='256'] {
  background-color: #777777;
}

.tile[value='512'] {
  background-color: #888888;
}

.tile[value='1024'] {
  background-color: #999999;
}

.tile[value='2048'] {
  background-color: #AAAAAA;
}

.tile[value='1'] {
  background-color: #BBBBBB;
}

.tile[value='2049'] {
  background-color: #CCCCCC;
}


/* ANIMATION */

.tile[data-state='sliding'] {
  animation-name: slide;
  animation-duration: calc(var(--slide-duration) * 2);  /* Multiplier adds buffer to prevent flashing back to original
                                                           position during processing of `initiateMergeSpawnInDOM`.

                                                           Combined with 50% keyframe end, this results in
                                                           the tile arriving at new location after one `--slide-duration`
                                                           and then waiting there to be destroyed by
                                                           `initiateMergeSpawnInDOM` */
}

.tile[data-state='merged'] {
  animation-name: merge;
  animation-duration: 250ms;
  animation-direction: alternate;
}

.tile[data-state='spawned'] {
  animation-name: spawn;
  animation-duration: 500ms;
  animation-direction: alternate;
}

@keyframes slide {
  50% {
    transform:
      translateX(calc(var(--tile-slide-length) * var(--slide-x)))
      translateY(calc(var(--tile-slide-length) * var(--slide-y)));
  }
}

@keyframes merge {
  100% {
    background-color: red;
    transform: scale(1.1);
  }
}

@keyframes spawn {
  0% {
    visibility: hidden;
  }
  50% {
    visibility: hidden;
  }
  50.01% {
    visibility: visible;
    background-color: initial;
    transform: scale(1);
  }
  100% {
    background-color: white;
    transform: scale(1.1);
  }
}
